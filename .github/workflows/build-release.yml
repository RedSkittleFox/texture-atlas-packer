name: Build and Generate Artifacts

on:
  push:
    tags:
      - 'v*'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build_linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Install LLVM Clang-19
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 19

    - name: Set Clang as default
      run: |
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 100
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-19 100

    - name: Configure CMake
      run: CC=clang-19 CXX=clang++-19 cmake --preset linux

    - name: Build
      run: cmake --build --preset linux-release

    - name: Package Binary
      run: cpack --preset linux-release

    - name: Package Source
      run: cpack --preset linux-source-release

    - name: Rename Artifacts
      run: |
        VERSION=${{ github.ref_name }}
        mkdir -p renamed
        mv build/linux/texture-atlas-packer.tar.gz renamed/texture-atlas-packer-${VERSION}-linux.tar.gz
        mv build/linux/texture-atlas-packer-source.zip renamed/texture-atlas-packer-${VERSION}-source.zip
        mv build/linux/texture-atlas-packer-source.tar.gz renamed/texture-atlas-packer-${VERSION}-source.tar.gz

    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-artifacts
        path: renamed/*

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake --preset windows -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl

      - name: Build
        run: cmake --build --preset windows-release

      - name: Package Binary
        run: cpack --preset windows-release

      - name: Rename Artifact
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}"
          New-Item -ItemType Directory -Path ${{ github.workspace }}/renamed | Out-Null
          Move-Item ${{ github.workspace }}/build/windows/texture-atlas-packer.zip "${{ github.workspace }}/renamed/texture-atlas-packer-$version-win.zip"


      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: ${{ github.workspace }}/renamed/*

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows]
    steps:
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-artifacts
          path: dist/linux

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: dist/windows

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            dist/linux/*
            dist/windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}